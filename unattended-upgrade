#!/usr/bin/env python
#   Runs a full Pacman system upgrade and
#   emails the output to the system admin

import subprocess

PACMAN_CMD = "/usr/bin/paru"

def upgrade():
    send_email("Started Pacman upgrade", "root", "Starting unattended Pacman upgrade")

    # Take a BTRFS root snapshot
    btrfs_pre_snapshot = subprocess.run(["snapper", "-c", "root", 
                                         "create", "-t", "pre", "-p", 
                                         "--description", "unattended-upgrade", 
                                         "-c", "number"], 
                                         capture_output=True)

    if btrfs_pre_snapshot.returncode:
        subject = "Upgrade failed - Problem taking BTRFS snapshot"
        body = btrfs_pre_snapshot.stdout.decode()
        send_email(subject, "root", body)
    else:
        pacman = subprocess.run([PACMAN_CMD, "-Syu", "--noconfirm"], capture_output=True)

        if pacman.returncode:
            subject = "Upgrade failed"
            body = pacman.stdout.decode() + pacman.stderr.decode()
            send_email(subject, "root", body)
        else:
            subject = "Upgrade succeeded"
            body = "Pacman full system upgrade completed successfully\n"
            body += "--------------------------------------------------\n"
            body += "Pacman output:\n"
            body += pacman.stdout.decode()
            if pacman.stderr:
                body += pacman.stderr.decode()
            body += "--------------------------------------------------\n"

            pacdiff = subprocess.run(["/usr/bin/pacdiff", "--output"], capture_output=True)
            if pacdiff.stdout:
                subject += " - But manual intervention required"
                body += "Pacdiff detected pacorig, pacsave, or pacnew file. Manual intervention required.\n"
                body += "Detected files: \n"
                body += pacdiff.stdout.decode()

            send_email(subject, "root", body)
            subprocess.run(["snapper", "-c", "root", 
                            "create", "-t", "post", 
                            "--pre-number", btrfs_pre_snapshot.stdout.decode().strip("\n"), 
                            "--description", "unattended-upgrade",
                            "-c", "number"
                            ]) 

def send_email(subject, recipient, body):
    process = subprocess.run(['mail', '-s', subject, recipient], input=body.encode())

upgrade()
